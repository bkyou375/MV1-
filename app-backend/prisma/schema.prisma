generator client {
users User[]
tables Table[]
reservations Reservation[]
settings Json?
}

model User {
id String @id @default(uuid())
restaurantId String?
restaurant Restaurant? @relation(fields: [restaurantId], references: [id])
name String
email String @unique
passwordHash String
role UserRole @default(STAFF)
active Boolean @default(true)
createdAt DateTime @default(now())
}

model Table {
id String @id @default(uuid())
restaurantId String
restaurant Restaurant @relation(fields: [restaurantId], references: [id])
name String
capacity Int
}

model Reservation {
id String @id @default(uuid())
restaurantId String
restaurant Restaurant @relation(fields: [restaurantId], references: [id])
name String
phone String
guests Int
reservedAt DateTime
status ReservationStatus @default(PENDING)
createdById String?
createdBy User? @relation(fields: [createdById], references: [id])
notes String?
createdAt DateTime @default(now())
updatedAt DateTime @updatedAt
}

enum UserRole {
OWNER
STAFF
SUPERADMIN
}

enum ReservationStatus {
PENDING
CONFIRMED
CANCELLED
NO_SHOW
}
